#ifndef FIRST_IM_HEAD
#define FIRST_IM_HEAD
#include <map>
#include <list>
#include <vector>
#include "first_poll.h"
#include "poller.h"
#include "first_protocol.h"

#define ROLE_NAME_LEN				20						//角色名长度

//调试开关
#define FIRST_DEBUG_SWITCH
#define CLIENT_MAX_REQEUST			16 * 1024				//客户端最大能发送的数据量
#define SOCKET_TYPE_PHP_FPM			1						//socket连接类型 php_fpm
#define SOCKET_TYPE_PHP_TASK		2						//socket连接类型 php任务进程
#define SOCKET_TYPE_PHP_ADMIN		3						//socket连接类型 php主管理进程
extern FirstStream *OUT_LOG_STREAM;
#define OUT_LOG		*OUT_LOG_STREAM

//版本号
#define	VERSION						"{$im_version}"

//场景cell描述
struct scene_apc_pack{
	uint16_t				cell_num;						//格子数量
	uint16_t				max_width;						//最大宽度
	uint16_t				cell_width;						//格子宽度
};
//频道数据类型
union channel_id_u{
	uint64_t channel_id;
	struct{
		uint32_t sub_id;
		uint16_t ch_id;			//频道id
		char msg_time;			//说话间隔(返回值里用到)
		char ch_type;			//场景类型
	};
};

//场景(副本)数据类型
union scene_pack_u{
	uint64_t scene_pack_id;
	struct{
		uint32_t sub_id;		//子Id
		uint16_t scene_id;		//场景id
		uint16_t line_id;		//玩家分流标志
	};
};

//fd, fd_struct_t
typedef map< int, fd_struct_t* >role_list_t;

//用户ID, fd_struct_t
typedef std::map< int, fd_struct_t* > scene_t;

//<场景ID, 场景成员>
typedef std::map< uint64_t, scene_t* > scene_map_t;

//频道成员
typedef std::map< int, fd_struct_t* > channel_t;

//<频道ID, 频道成员>
typedef std::map< uint64_t, channel_t* > channel_map_t;

//用户加入的频道
struct join_list_t{
	channel_id_u		channel;
	join_list_t*		next;
};

//用户信息
struct role_struct_t {
	int						role_id;						//用户ID
	uint32_t				login_time;						//登录时间
	uint64_t				scene_pack;						//移动的场景地图
	uint32_t				model_id;						//模型
	uint32_t				coord;							//在地图上坐标
	uint32_t				last_move_time;					//上一次移动的时间
	uint32_t				move_check;						//检验移动数据包
	char					role_name[ ROLE_NAME_LEN ];		//用户昵称
	join_list_t*			join_list;						//加入的聊天频道
	char					job_id;							//职业id
	char					show_role;						//显示其它玩家方式 0:隐藏 1:显示
	unsigned char			level;							//人物等级
};
#endif
